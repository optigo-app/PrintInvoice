{"version":3,"file":"static/js/8911.b49db124.chunk.js","mappings":"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","sources":["pages/prints/JewelleryTaxInvoiceEventWise/JewelleryTaxInvoiceMemo.jsx"],"sourcesContent":["//code of version 66 \r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  NumberWithCommas,\r\n  apiCall,\r\n  formatAmount,\r\n  handleImageError,\r\n  handlePrint,\r\n  isObjectEmpty,\r\n  taxGenrator,\r\n} from \"../../../GlobalFunctions\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport style from \"../../../assets/css/prints/jewelleryTaxInvoice.module.css\";\r\nimport style1 from \"../../../assets/css/prints/jewelleryTaxInvoice.module.css\";\r\nimport style2 from \"../../../assets/css/headers/header1.module.css\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { OrganizeDataPrint } from \"../../../GlobalFunctions/OrganizeDataPrint\";\r\n\r\nconst JewelleryTaxInvoiceMemo = ({ urls, token, invoiceNo, printName, evn, ApiVer }) => {\r\n  const [loader, setLoader] = useState(true);\r\n  \r\n  const [result, setResult] = useState();\r\n  const [data, setData] = useState([]);\r\n  const [tax, settax] = useState([]);\r\n  const [memo, setMemo] = useState(true);\r\n  const [estimate, setEstimate] = useState(atob(evn)?.toLowerCase() === \"product estimate\" ? true : false);\r\n  const [summary, setSummary] = useState([]);\r\n  const [summary2, setSummary2] = useState([]);\r\n  const [isImageWorking, setIsImageWorking] = useState(true);\r\n  const handleImageErrors = () => {\r\n    setIsImageWorking(false);\r\n  };\r\n  const [totalAmount, settotalAmount] = useState({\r\n    before: 0,\r\n    after: 0,\r\n    grand: 0,\r\n  });\r\n  const [json0Data, setJson0Data] = useState({});\r\n  const [customerDetail, setCustomerDetail] = useState({\r\n    pan: \"\",\r\n    gst: \"\",\r\n  });\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n\r\n  const [evns, setEvns] = useState(atob(evn)?.toLowerCase());\r\n\r\n  const loadData = (data) => {\r\n    \r\n    let json0Datas = data.BillPrint_Json[0];\r\n    let custDetail = { ...customerDetail };\r\n    if (data.BillPrint_Json[0]?.vat_cst_pan !== \"\") {\r\n      let custpanGstArr = data.BillPrint_Json[0]?.vat_cst_pan.split(\"|\");\r\n      let custpans = custpanGstArr[1] ? custpanGstArr[1].split(\"-\") : \"\";\r\n      let custGst = custpanGstArr[0] ? custpanGstArr[0].split(\"-\") : \"\";\r\n      custDetail.pan = custpans[1] ? custpans[1] : \"\";\r\n      custDetail.gst = custGst[1] ? custGst[1] : \"\";\r\n      setCustomerDetail(custDetail);\r\n    }\r\n    setJson0Data(json0Datas);\r\n    let resultArr = [];\r\n    let totalAmountBefore = 0;\r\n    let metalArr = [];\r\n    let diamondWt = 0;\r\n    let colorStoneWt = 0;\r\n    let miscWt = 0;\r\n    let grossWt = 0;\r\n    data?.BillPrint_Json1.forEach((e, i) => {\r\n      let findRecord = metalArr.findIndex(\r\n        (elem) => elem?.label === e?.MetalTypePurity\r\n      );\r\n      if (findRecord === -1) {\r\n        metalArr.push({ label: e?.MetalTypePurity, value: (e?.NetWt * e?.Quantity), gm: true });\r\n      } else {\r\n        // metalArr[findRecord].value += (e?.NetWt * e?.Quantity);\r\n        metalArr[findRecord].value += (e?.NetWt);\r\n      }\r\n      // grossWt += (e?.grosswt * e?.Quantity);\r\n      grossWt += (e?.grosswt );\r\n      let diamondWts = 0;\r\n      let colorStoneWts = 0;\r\n      let miscWts = 0;\r\n      let obj = { ...e };\r\n      let miscWt = 0;\r\n      let materials = [];\r\n      totalAmountBefore +=\r\n        e?.TotalAmount / data?.BillPrint_Json[0].CurrencyExchRate;\r\n      let metalColorCode = \"\";\r\n      data?.BillPrint_Json2.forEach((ele, ind) => {\r\n        if (obj?.SrJobno === ele?.StockBarcode) {\r\n          // if ((ele?.MasterManagement_DiamondStoneTypeid === 1 || ele?.MasterManagement_DiamondStoneTypeid === 2 || ele?.MasterManagement_DiamondStoneTypeid === 3) && ele?.IsHSCOE === 0) {\r\n          if (\r\n            (ele?.MasterManagement_DiamondStoneTypeid === 1 ||\r\n              ele?.MasterManagement_DiamondStoneTypeid === 2 ||\r\n              ele?.MasterManagement_DiamondStoneTypeid === 3) &&\r\n            ele?.IsHSCOE === 0\r\n          ) {\r\n            let findRecord = materials.findIndex(\r\n              (elem) =>\r\n                elem?.MasterManagement_DiamondStoneTypeid ===\r\n                ele?.MasterManagement_DiamondStoneTypeid &&\r\n                elem?.ShapeName === ele?.ShapeName &&\r\n                elem?.Colorname === ele?.Colorname &&\r\n                elem?.QualityName === ele?.QualityName &&\r\n                elem?.Rate === ele?.Rate\r\n            );\r\n            if (findRecord === -1) {\r\n              materials.push(ele);\r\n            } else {\r\n              materials[findRecord].Pcs += ele?.Pcs;\r\n              materials[findRecord].Wt += ele?.Wt;\r\n              materials[findRecord].Amount += ele?.Amount;\r\n            }\r\n            if (ele?.MasterManagement_DiamondStoneTypeid === 1) {\r\n              diamondWt += (ele?.Wt * obj?.Quantity) ;\r\n              diamondWts += ele?.Wt;\r\n            }\r\n            if (ele?.MasterManagement_DiamondStoneTypeid === 2) {\r\n              colorStoneWt += (ele?.Wt * obj?.Quantity);\r\n              colorStoneWts += ele?.Wt;\r\n            }\r\n            if (ele?.MasterManagement_DiamondStoneTypeid === 3) {\r\n              miscWt += (ele?.Wt );\r\n              miscWts += ele?.Wt;\r\n            }\r\n          } else if (ele?.MasterManagement_DiamondStoneTypeid === 4) {\r\n            if (ele?.IsPrimaryMetal === 1) {\r\n              metalColorCode = ele?.MetalColorCode;\r\n            } else if (metalColorCode === \"\") {\r\n              metalColorCode = ele?.MetalColorCode;\r\n            }\r\n          }\r\n        }\r\n      });\r\n        \r\n      obj.TotalAmount =\r\n        obj.TotalAmount / data?.BillPrint_Json[0].CurrencyExchRate;\r\n      obj.diamondWts = diamondWts;\r\n      obj.colorStoneWts = colorStoneWts;\r\n      obj.miscWts = miscWts;\r\n      obj.materials = materials;\r\n      obj.metalColorCode = metalColorCode;\r\n      \r\n      obj.miscWt = (miscWt * obj?.Quantity);\r\n      resultArr.push(obj);\r\n    });\r\n    // let miscQunWt = 0;\r\n    // metalArr?.forEach((a) => {\r\n    //   return  miscQunWt += a?.miscWt;\r\n    // })\r\n    metalArr.push({ label: \"Diamond Wt\", value: (diamondWt), gm: false });\r\n    metalArr.push({ label: \"Stone Wt\", value: colorStoneWt, gm: false });\r\n    metalArr.push({ label: \"Gross Wt\", value: grossWt, gm: true });\r\n  \r\n    if (!estimate) {\r\n      // metalArr.push({ label: \"Gross Wt\", value: grossWt, gm: true });\r\n    }\r\n\r\n\r\n    let miscQunWt = 0;\r\n    resultArr?.forEach((a) => {\r\n      return  miscQunWt += a?.miscWt;\r\n    })\r\n\r\n    setSummary(metalArr);\r\n    let taxValue = taxGenrator(json0Datas, totalAmountBefore);\r\n    let afterTotal =\r\n      taxValue.reduce((accumulator, currentValue) => {\r\n        return accumulator + +currentValue.amount;\r\n      }, 0) + totalAmountBefore;\r\n    let grandTotal = afterTotal + json0Datas.AddLess;\r\n    let totalAmounts = {\r\n      before: totalAmountBefore,\r\n      after: afterTotal,\r\n      grand: grandTotal,\r\n    };\r\n  //   resultArr?.sort((a, b) => {\r\n  //     const designNoA = parseInt((a?.designno)?.match(/\\d+/)[0]);\r\n  //     const designNoB = parseInt((b?.designno)?.match(/\\d+/)[0]);\r\n  //     return designNoA - designNoB;\r\n  // });\r\n  resultArr?.sort((a, b) => a?.designno - b?.designno)\r\n  \r\n    settotalAmount(totalAmounts);\r\n    settax(taxValue);\r\n    setData(resultArr);\r\n  };\r\n  const loadData2 = (data) => {\r\n    const copydata = cloneDeep(data);\r\n\r\n    let address = copydata?.BillPrint_Json[0]?.Printlable?.split(\"\\r\\n\");\r\n    copydata.BillPrint_Json[0].address = address;\r\n    const datas = OrganizeDataPrint(\r\n      copydata?.BillPrint_Json[0],\r\n      copydata?.BillPrint_Json1,\r\n      copydata?.BillPrint_Json2\r\n    );\r\n      console.log(datas);\r\n    setResult(datas)\r\n\r\n    let metwise = [];\r\n\r\n    // datas?.resultArray?.forEach((a) => {\r\n    //   let findrec =  metwise.findIndex((elem) => elem?.label === a?.MetalTypePurity);\r\n    //   if(findrec === -1){\r\n    //     let obj = {...a}\r\n    //     obj.netwt_ = (a?.NetWt * a?.Quantity);\r\n    //     obj.dwt = a?.totals?.diamonds?.Wt;\r\n    //     obj.cswt = a?.totals?.colorstone?.Wt;\r\n    //     metwise.push(obj);\r\n    //   }else{\r\n    //     metwise[findrec].netwt_ += (a?.NetWt * a?.Quantity)\r\n    //     metwise[findrec].dwt += (a?.dwt * a?.Quantity)\r\n    //     metwise[findrec].cswt += (a?.cswt * a?.Quantity)\r\n    //   }\r\n    // })\r\n    // let diaclr = [];\r\n    // datas?.resultArray?.forEach((el) => {\r\n    //     let obj = {...el};\r\n    //     obj.dia_wt_quantity = (el?.Quantity * el?.totals?.diamonds?.Wt);\r\n    //     obj.cls_wt_quantity = (el?.Quantity * el?.totals?.colorstone?.Wt);\r\n    // })\r\n\r\n    // setSummary2(metwise);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const sendData = async () => {\r\n      try {\r\n        const data = await apiCall(token, invoiceNo, printName, urls, evn, ApiVer);\r\n        if (data?.Status === \"200\") {\r\n          let isEmpty = isObjectEmpty(data?.Data);\r\n          if (!isEmpty) {\r\n            loadData(data?.Data);\r\n            loadData2(data?.Data)\r\n            setLoader(false);\r\n          } else {\r\n            setLoader(false);\r\n            setMsg(\"Data Not Found\");\r\n          }\r\n        } else {\r\n          setLoader(false);\r\n          setMsg(data?.Message);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    sendData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  return loader ? (\r\n    <Loader />\r\n  ) : msg === \"\" ? (\r\n    <>\r\n      <div className={`container max_width_container pad_60_allPrint ${style?.containerJewellery} jewelleryinvoiceContain`} >\r\n        {/* buttons */}\r\n        <div className={`d-flex justify-content-end align-items-center ${style?.print_sec_sum4} mb-4`} >\r\n          <div className=\"form-check ps-3 mt-4\">\r\n            <input\r\n              type=\"button\"\r\n              className=\"btn_white blue py-1\"\r\n              value=\"Print\"\r\n              onClick={(e) => handlePrint(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        { json0Data?.PrintHeadLabel !== '' && <div className={`${style?.headLabelJTI_quote}`}>{json0Data?.PrintHeadLabel}</div>}\r\n        {/* header */}\r\n        {json0Data?.IsBranchWiseAddress === 1 ? (\r\n          <div className=\"d-flex justify-content-between p-2\">\r\n            <div>\r\n              <div\r\n                dangerouslySetInnerHTML={{ __html: json0Data?.Branch_Address }}\r\n              ></div>\r\n            </div>\r\n            <div>\r\n              \r\n            {isImageWorking && (json0Data?.PrintLogo !== \"\" && \r\n                      <img src={json0Data?.PrintLogo} alt=\"\" \r\n                      className='w-25 h-auto ms-auto d-block object-fit-contain' \r\n                      onError={handleImageErrors} height={120} width={150} />)}\r\n              {/* <img\r\n                src={json0Data?.PrintLogo}\r\n                alt=\"\"\r\n                className={`${style?.image}`}\r\n              /> */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className={`${style2.companyDetails}`}>\r\n            <div className={`${style2.companyhead} p-2`}>\r\n              <p className={`${style2.lines} fw-bold px-1`} style21={{ fontWeight: \"bold\" }}>\r\n                {json0Data?.CompanyFullName}\r\n              </p>\r\n\r\n    \r\n              <p className={style2.lines}>{json0Data?.CompanyAddress}</p>\r\n              <p className={style2.lines}>{json0Data?.CompanyAddress2}</p>\r\n              <p className={style2.lines}>\r\n                {json0Data?.CompanyCity}-{json0Data?.CompanyPinCode},\r\n                {json0Data?.CompanyState}({json0Data?.CompanyCountry})\r\n              </p>\r\n              <p className={style2.lines}>\r\n                Tell No: {json0Data?.CompanyTellNo}\r\n              </p>\r\n              <p className={style2.lines}>\r\n                {json0Data?.CompanyEmail} | {json0Data?.CompanyWebsite}\r\n              </p>\r\n              <p className={style2.lines}>\r\n                {json0Data?.Company_VAT_GST_No} | {json0Data?.Company_CST_STATE}\r\n                -{json0Data?.Company_CST_STATE_No} | PAN-{json0Data?.Pannumber}\r\n              </p>\r\n            </div>\r\n            <div\r\n              style={{ width: \"30%\" }}\r\n              className=\"d-flex justify-content-end align-item-center h-100\"\r\n            >\r\n              {/* <img\r\n                src={json0Data?.PrintLogo}\r\n                alt=\"\"\r\n                className={style2.headerImg}\r\n              /> */}\r\n                {isImageWorking && (json0Data?.PrintLogo !== \"\" && \r\n                      <img src={json0Data?.PrintLogo} alt=\"\" \r\n                      className='w-100 h-auto ms-auto d-block object-fit-contain'\r\n                      style={{maxWidth:'116px'}}\r\n                      onError={handleImageErrors} height={120} width={150} />)}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* sub header */}\r\n        <div className=\"mt-2 no_break\">\r\n          <div className=\"border d-flex justify-content-between\">\r\n            <div className=\"col-6 p-2\">\r\n              <p className=\"lh-1 pb-1\">To, </p>\r\n              {json0Data?.customerfirmname !== \"\" && (\r\n                <p className=\"fw-bold lh-1 pb-1\">\r\n                  {json0Data?.customerfirmname}\r\n                </p>\r\n              )}\r\n              {json0Data?.customerstreet !== \"\" && (\r\n                <p className=\"lh-1 pb-1\">{json0Data?.customerstreet}</p>\r\n              )}\r\n              {json0Data?.customerregion !== \"\" && (\r\n                <p className=\"lh-1 pb-1\">{json0Data?.customerregion}</p>\r\n              )}\r\n              {json0Data?.customercity !== \"\" && (\r\n                <p className=\"lh-1 pb-1\">{json0Data?.customercity} {json0Data?.customerpincode}</p>\r\n              )}\r\n              <p className=\"lh-1 pb-1\">\r\n                {/* {json0Data?.customerstate}, {json0Data?.customercountry}{\" \"} */}\r\n                \r\n              </p>\r\n              {json0Data?.customermobileno !== \"\" && (\r\n                <p className=\"lh-1 pb-1\">Tel : {json0Data?.customermobileno}</p>\r\n              )}\r\n              <p className=\"lh-1 pb-1\">{json0Data?.customeremail1}</p>\r\n            </div>\r\n            <div className=\"col-5 px-2 py-3\">\r\n              <p className=\"lh-1 pb-1\">\r\n                {evns === \"memo\" && \"Memo \"} Invoice\r\n                <span className=\"fw-bold\">#: {json0Data?.InvoiceNo}</span> Dated{\" \"}\r\n                <span className=\"fw-bold\">{json0Data?.EntryDate}</span>\r\n              </p>\r\n              {customerDetail?.pan !== \"\" && (\r\n                <p className=\"lh-1 pb-1\">\r\n                  PAN<span className=\"fw-bold\">#: {customerDetail?.pan}</span>{\" \"}\r\n                </p>\r\n              )}\r\n              <div>\r\n                GSTIN : <span className=\"fw-bold\">{result?.header?.CustGstNo}</span> | { result?.header?.Cust_CST_STATE } <span className=\"fw-bold\"> { result?.header?.Cust_CST_STATE_No }</span>\r\n              </div>\r\n     \r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* table header */}\r\n        <div className=\"d-flex border lightGrey no_break\">\r\n          <div className=\"col-1 p-1 border-end\">\r\n            <p className=\"fw-bold text-center\">SR NO</p>\r\n          </div>\r\n          <div className={`col-2 border-end`}>\r\n            <p className=\"fw-bold text-center\">ITEM CODE</p>\r\n          </div>\r\n          <div className={`${'col-5'} p-1 border-end`}>\r\n            <p className=\"fw-bold text-center\">DESCRIPTION</p>\r\n          </div>\r\n          <div className={` ${'col-2'} p-1 border-end  `}>\r\n            <p className=\"fw-bold text-center\">IMAGE</p>\r\n          </div>\r\n          <div className=\"col-2 p-1\">\r\n            <p className=\"fw-bold text-center\">\r\n              AMOUNT ({json0Data?.CurrencyCode})\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {/* table data */}\r\n        {data.length > 0 &&\r\n          data.map((e, i) => {\r\n            return (\r\n              <div className=\"d-flex border-start border-end border-bottom no_break\" key={i} >\r\n                <div className=\"col-1 p-1 border-end\">\r\n                  <p className=\"text-center\">{i + 1}</p>\r\n                </div>\r\n                <div className={`col-2 p-1 border-end position-relative`}>\r\n                  {  <p>Job: {e?.SrJobno} </p>}\r\n                  <p>\r\n                    Design: <span className=\"fw-bold\">{e?.designno}</span>{\" \"}\r\n                  </p>\r\n                  { e?.Size === '' || e?.Size === '-' ? '' : <p className=\"fw-bold\">{e?.Size}</p>}\r\n                  {/* <div className=\"text-center w-100 \" style={{position: 'absolute', top:'50%' }}><span><span className=\"fw-normal\">QTY :</span> </span><span className=\"fw-bold\">{e?.Quantity}</span></div> */}\r\n                </div>\r\n                <div className={`${'col-5'} p-1 border-end`}>\r\n                  <p className=\"text-break\">\r\n                    {e?.MetalTypePurity} {e?.MetalColor} |{\" \"}\r\n                    {NumberWithCommas(e?.grosswt, 3)} gms GW |{\" \"}\r\n                    {NumberWithCommas(e?.NetWt, 3)} gms NW\r\n                    {e?.diamondWts !== 0 && (\r\n                      <> | {\"Dia: \"} {NumberWithCommas(e?.diamondWts, 3)} Cts</>\r\n                    )}\r\n                    {e?.colorStoneWts !== 0 && (\r\n                      <> | {\"CS: \"} {NumberWithCommas(e?.colorStoneWts, 3)} Cts</>\r\n                    )}\r\n                    {e?.miscWts !== 0 && (\r\n                      <> | {\"MISC: \"} {NumberWithCommas(e?.miscWts, 3)} gms</>\r\n                    )}\r\n                  </p>\r\n                  \r\n                  {e.materials.length > 0 &&\r\n                    e.materials.map((ele, ind) => {\r\n                      return (\r\n                        <p key={ind} className=\"text-break\">\r\n                          {/* {ele?.IsCenterStone === 1 ? ( */}\r\n                            {/* // \"Center stone\" */}\r\n                          {/* // ) : ( */}\r\n                            <span className=\"text-break\">\r\n                              {ele?.MasterManagement_DiamondStoneTypeid === 1 &&\r\n                                \"Diamond\"}\r\n                              {ele?.MasterManagement_DiamondStoneTypeid === 2 &&\r\n                                \"Colorstone\"}\r\n                              {ele?.MasterManagement_DiamondStoneTypeid === 3 &&\r\n                                \"Misc\"}\r\n                            </span>\r\n                          {/* )} */}\r\n                          : {NumberWithCommas(ele?.Pcs, 0)} Pcs | {NumberWithCommas(ele?.Wt, 3)} \r\n                          {ele?.MasterManagement_DiamondStoneTypeid === 3 ? \"gms\" : \"Cts\"} | \r\n                          {ele?.ShapeName}{ele?.MasterManagement_DiamondStoneTypeid !== 3 && <span className=\"text-break\"> \r\n                          {\" \"} {ele?.Colorname} {ele?.QualityName}</span>}\r\n                        </p>\r\n                      );\r\n                    })}\r\n                    {e?.JobRemark !== \"\" && (\r\n                    <div>\r\n                      <p className=\"text-decoration-underline fw-bold\">\r\n                        REMARKS{\" \"}\r\n                      </p>\r\n                      <p>{e?.JobRemark}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className={`${'col-2' } p-1 border-end d-flex justify-content-center align-items-center`}>\r\n                  <img\r\n                    src={e?.DesignImage}\r\n                    alt=\"\"\r\n                    className={`d-block mx-auto ${style?.image} w-100`}\r\n                    onError={handleImageError}\r\n                  />\r\n                </div>\r\n                <div className=\"col-2 p-1\">\r\n                  <p className=\"text-end\">\r\n                    <span\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: json0Data?.Currencysymbol,\r\n                      }}\r\n                    ></span>\r\n                    {NumberWithCommas(e?.TotalAmount, 2)}{\" \"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        {/* total */}\r\n        <div className=\"d-flex border-start border-end border-bottom no_break lightGrey\">\r\n          <div className=\"col-1 p-1 border-end\">\r\n            <p className=\"text-center\"></p>\r\n          </div>\r\n          <div className={`${'col-9' } p-1 border-end`}>\r\n            <p className=\"fw-bold\">Total</p>{\" \"}\r\n          </div>\r\n          <div className=\"col-2 p-1\">\r\n            <p className=\"text-end fw-bold\">\r\n              <span\r\n                dangerouslySetInnerHTML={{ __html: json0Data?.Currencysymbol }}\r\n              ></span>\r\n              {NumberWithCommas(totalAmount.before, 2)}{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {/* Remakrs */}\r\n        <div className=\"d-flex border-start border-end border-bottom no_break\">\r\n          <div className=\"col-4 p-1 border-end\">\r\n            <p className=\"fw-bold text-decoration-underline\"> REMARKS</p>\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: json0Data?.PrintRemark }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"col-4 p-1 border-end\">\r\n            {  summary.map((e, i) => {\r\n              return (\r\n                <div className=\"d-flex justify-content-between\" key={i}>\r\n                  <p key={i}>{e?.label}: </p>\r\n                  <p>\r\n                    {NumberWithCommas(e?.value, 3)} {e?.gm ? \"gm\" : \"cts\"}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n           \r\n          </div>\r\n          <div className=\"col-2 p-1 border-end\">\r\n            {tax.map((e, i) => {\r\n              return (\r\n                <p key={i}>\r\n                  {e?.name} @ {e?.per}\r\n                </p>\r\n              );\r\n            })}\r\n            <p>Total</p>\r\n            {json0Data?.AddLess > 0 ? <p>{ json0Data?.AddLess === 0 ? '' : 'Add'}</p> : <p>{ json0Data?.AddLess === 0 ? '' : 'Less'}</p>}\r\n          </div>\r\n          <div className=\"col-2 p-1\">\r\n            {tax?.map((e, i) => {\r\n              return (\r\n                <p className=\"text-end fw-bold\" key={i}>\r\n                  <span\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: json0Data?.Currencysymbol,\r\n                    }}\r\n                  ></span>\r\n                  {NumberWithCommas((+e?.amount / result?.header?.CurrencyExchRate), 2)}{\" \"}\r\n                </p>\r\n              );\r\n            })}\r\n            <p className=\"text-end fw-bold\">\r\n              <span\r\n                dangerouslySetInnerHTML={{ __html: json0Data?.Currencysymbol }}\r\n              ></span>\r\n              {/* {NumberWithCommas(totalAmount.after, 2)}{\" \"} */}\r\n              {formatAmount(((result?.mainTotal?.total_amount / result?.header?.CurrencyExchRate) + (result?.allTaxesTotal  / result?.header?.CurrencyExchRate)))}\r\n            </p>\r\n            <p className=\"text-end fw-bold\">\r\n              {  json0Data?.AddLess !== 0 && <span\r\n                dangerouslySetInnerHTML={{ __html: json0Data?.Currencysymbol }}\r\n              ></span>}\r\n              { json0Data?.AddLess !== 0 && NumberWithCommas(json0Data?.AddLess, 2)}{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {/* gran total */}\r\n        <div className=\"d-flex border-start border-end border-bottom no_break lightGrey\">\r\n          <div className=\"col-8 p-1\"></div>\r\n          <div className=\"col-2 p-1\">\r\n            <p className=\"fw-bold\">GRAND TOTAL</p>{\" \"}\r\n          </div>\r\n          <div className=\"col-2 p-1\">\r\n            <p className=\"text-end fw-bold\">\r\n              <span\r\n                dangerouslySetInnerHTML={{ __html: json0Data?.Currencysymbol }}\r\n              ></span>\r\n              {/* {NumberWithCommas(totalAmount.grand, 2)}{\" \"} */}\r\n              {formatAmount(((result?.mainTotal?.total_amount / result?.header?.CurrencyExchRate) + (result?.allTaxesTotal) + result?.header?.AddLess))}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {/* computer generated */}\r\n        <p className={`py-2 ${style.generated} no_break text-secondary`}>\r\n          ** THIS IS A COMPUTER GENERATED INVOICE AND KINDLY NOTIFY US\r\n          IMMEDIATELY IN CASE YOU FIND ANY DISCREPANCY IN THE DETAILS OF\r\n          TRANSACTIONS{\" \"}\r\n        </p>\r\n        {/* remark */}\r\n        <div className=\"border px-2 no_break\">\r\n          <div\r\n            dangerouslySetInnerHTML={{ __html: json0Data?.Declaration }}\r\n          ></div>\r\n        </div>\r\n        {/* bank detail */}\r\n        <div className=\"border-start border-end border-bottom d-flex no_break\">\r\n          <div className=\"col-6 border-end p-2\">\r\n            <p className=\"fw-bold\">Bank Detail</p>\r\n            <p>Bank Name: {json0Data?.bankname}</p>\r\n            <p className=\"text-break\">Branch: {json0Data?.bankaddress}</p>\r\n            <p>Account Name: {json0Data?.accountname}</p>\r\n            <p>Account No. : {json0Data?.accountnumber}</p>\r\n            <p>RTGS/NEFT IFSC: {json0Data?.rtgs_neft_ifsc}</p>\r\n          </div>\r\n          <div className=\"col-3 border-end d-flex flex-column justify-content-between p-2\">\r\n            <p>Signature</p>\r\n            <p className=\"fw-bold\">{json0Data?.customerfirmname}</p>\r\n          </div>\r\n          <div className=\"col-3 d-flex flex-column justify-content-between p-2\">\r\n            <p>Signature</p>\r\n            <p className=\"fw-bold\">{json0Data?.CompanyFullName}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <p className=\"text-danger fs-2 fw-bold mt-5 text-center w-50 mx-auto\">\r\n      {msg}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default JewelleryTaxInvoiceMemo;\r\n\r\n\r\n"],"names":["_ref","_atob","_atob2","_result$header","_result$header2","_result$header3","_result$mainTotal","_result$header5","_result$header6","_result$mainTotal2","_result$header7","_result$header8","urls","token","invoiceNo","printName","evn","ApiVer","loader","setLoader","useState","result","setResult","data","setData","tax","settax","memo","setMemo","estimate","setEstimate","atob","toLowerCase","summary","setSummary","summary2","setSummary2","isImageWorking","setIsImageWorking","handleImageErrors","totalAmount","settotalAmount","before","after","grand","json0Data","setJson0Data","customerDetail","setCustomerDetail","pan","gst","msg","setMsg","evns","setEvns","useEffect","async","apiCall","Status","isObjectEmpty","Data","_data$BillPrint_Json$","json0Datas","BillPrint_Json","custDetail","vat_cst_pan","_data$BillPrint_Json$2","custpanGstArr","split","custpans","custGst","resultArr","totalAmountBefore","metalArr","diamondWt","colorStoneWt","grossWt","BillPrint_Json1","forEach","e","i","findRecord","findIndex","elem","label","MetalTypePurity","push","value","NetWt","Quantity","gm","grosswt","diamondWts","colorStoneWts","miscWts","obj","miscWt","materials","TotalAmount","CurrencyExchRate","metalColorCode","BillPrint_Json2","ele","ind","SrJobno","StockBarcode","MasterManagement_DiamondStoneTypeid","IsHSCOE","IsPrimaryMetal","MetalColorCode","ShapeName","Colorname","QualityName","Rate","Pcs","Wt","Amount","miscQunWt","a","taxValue","taxGenrator","afterTotal","reduce","accumulator","currentValue","amount","grandTotal","AddLess","totalAmounts","sort","b","designno","loadData","_copydata$BillPrint_J","_copydata$BillPrint_J2","copydata","cloneDeep","address","Printlable","datas","OrganizeDataPrint","console","log","loadData2","Message","error","sendData","_jsx","Loader","_Fragment","children","_jsxs","className","concat","style","containerJewellery","print_sec_sum4","type","onClick","handlePrint","PrintHeadLabel","headLabelJTI_quote","IsBranchWiseAddress","dangerouslySetInnerHTML","__html","Branch_Address","PrintLogo","src","alt","onError","height","width","style2","companyDetails","companyhead","lines","style21","fontWeight","CompanyFullName","CompanyAddress","CompanyAddress2","CompanyCity","CompanyPinCode","CompanyState","CompanyCountry","CompanyTellNo","CompanyEmail","CompanyWebsite","Company_VAT_GST_No","Company_CST_STATE","Company_CST_STATE_No","Pannumber","maxWidth","customerfirmname","customerstreet","customerregion","customercity","customerpincode","customermobileno","customeremail1","InvoiceNo","EntryDate","header","CustGstNo","Cust_CST_STATE","Cust_CST_STATE_No","CurrencyCode","length","map","Size","MetalColor","NumberWithCommas","JobRemark","DesignImage","image","handleImageError","Currencysymbol","PrintRemark","name","per","_result$header4","formatAmount","mainTotal","total_amount","allTaxesTotal","generated","Declaration","bankname","bankaddress","accountname","accountnumber","rtgs_neft_ifsc"],"sourceRoot":""}