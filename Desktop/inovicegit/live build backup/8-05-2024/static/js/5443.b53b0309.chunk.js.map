{"version":3,"file":"static/js/5443.b53b0309.chunk.js","mappings":"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","sources":["GlobalFunctions/FetchDatas.js","GlobalFunctions/GetData.js","GlobalFunctions/GetUniqueJob.js","GlobalFunctions/HandleImageError.js","GlobalFunctions/HandlePrint.js","GlobalFunctions/DateFormat.js","GlobalFunctions/OrganizeBagPrintData.jsx","pages/bagPrints/BarcodeStickerGen.jsx","pages/bagPrints/Jobbagsticker3.jsx"],"sourcesContent":["import { GetData } from \"./GetData\";\r\nimport { organizeData } from \"./OrganizeBagPrintData\";\r\n\r\nexport const FetchDatas = async (queryParams,resultString, queries, headers) => {\r\n    try {\r\n        const responseData = [];\r\n            const objs = {\r\n                jobno: resultString,\r\n                custid: queries.custid,\r\n                printname: queries.printname,\r\n                appuserid: queries.appuserid,\r\n                url: queries.url,\r\n                headers: headers,\r\n              };\r\n              let allDatas = await GetData(objs);\r\n      \r\n              let datas = organizeData(allDatas?.rd, allDatas?.rd1);\r\n\r\n              // eslint-disable-next-line array-callback-return\r\n              datas?.map((a) => {\r\n\r\n                let length = 0;\r\n                let clr = {\r\n                    clrPcs: 0,\r\n                    clrWt: 0\r\n                };\r\n                let dia = {\r\n                    diaPcs: 0,\r\n                    diaWt: 0\r\n                };\r\n                let misc = {\r\n                    miscWt: 0\r\n                };\r\n                let DiamondList = [];\r\n                let ColorStoneList = [];\r\n                // eslint-disable-next-line array-callback-return\r\n                a?.rd1?.map((e, i) => {\r\n                    if (e?.ConcatedFullShapeQualityColorCode !== \"- - - \") {\r\n                        length++;\r\n                    }\r\n                    if (e?.MasterManagement_DiamondStoneTypeid === 3) {\r\n                        dia.diaPcs = dia.diaPcs + e?.ActualPcs;\r\n                        dia.diaWt = dia.diaWt + e?.ActualWeight;\r\n                    } else if (e?.MasterManagement_DiamondStoneTypeid === 4) {\r\n                        clr.clrPcs = clr.clrPcs + e?.ActualPcs;\r\n                        clr.clrWt = clr.clrWt + e?.ActualWeight;\r\n                    } else if (e?.MasterManagement_DiamondStoneTypeid === 7) {\r\n                        misc.miscWt = misc.miscWt + e?.ActualWeight;\r\n                    }\r\n                    if (e?.MasterManagement_DiamondStoneTypeid === 3) {\r\n                        DiamondList.push(e);\r\n                    } else if (e?.MasterManagement_DiamondStoneTypeid === 4) {\r\n                        ColorStoneList.push(e);\r\n                    } else {\r\n                        return '';\r\n                    }\r\n                });\r\n                let imagePath = queryParams?.imagepath;\r\n                imagePath = atob(queryParams?.imagepath);\r\n                \r\n                let img = imagePath + a?.rd?.ThumbImagePath;\r\n                responseData.push({ data: a, additional: { length: length, clr: clr, dia: dia, img: img, misc: misc } });\r\n              })\r\n              return responseData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport const GetData = async (job) => {\r\n    try {\r\n        let p_tag = { \"SerialJobno\": `${job?.jobno}`, \"customerid\": `${job?.custid}`, \"BagPrintName\": `${job?.printname}` };\r\n\r\n        let jsonString = JSON.stringify(p_tag);\r\n\r\n        let base64String = btoa(jsonString);\r\n\r\n        let Body = {\r\n            \"con\": `{\\\"id\\\":\\\"\\\",\\\"mode\\\":\\\"${job?.printname}\\\",\\\"appuserid\\\":\\\"${job?.appuserid}\\\"}`,\r\n            \"p\": `${base64String}`,\r\n            \"f\": `${job?.appuserid} ${job?.printname}`\r\n        };\r\n        let urls = atob(job?.url);\r\n\r\n        const response = await axios.post(urls, Body, { headers: job?.headers });\r\n        let datas = JSON?.parse(response?.data?.d);\r\n\r\n        // let newArr = [];\r\n        // console.log(datas);\r\n        // let jobss = [];\r\n        // let jobs = job.jobno.split(\",\");\r\n        // jobs.forEach(element => {\r\n        //     jobss.push( element.replace(/'/g, ''));\r\n        // });\r\n        // console.log(jobss);\r\n        // datas?.rd?.forEach((ele, ind) => {\r\n        //     let findObj = datas?.rd?.findIndex(ele=>ele?.rd?.serialjobno ==jobss[ind]);\r\n        //     if(findObj !== 1){\r\n        //         newArr.push(datas?.rd[findObj]);\r\n        //     }\r\n        // });\r\n        // console.log(newArr);\r\n        \r\n        const rd = (datas?.rd)?.sort((a, b) => {\r\n            const numA = parseInt(a?.serialjobno?.split('/')[1], 10);\r\n            const numB = parseInt(b?.serialjobno?.split('/')[1], 10);\r\n            // Compare the numeric values\r\n            return numA - numB;\r\n          });\r\n\r\n        const rd1 = (datas?.rd1)?.sort((a, b) => {\r\n            const numA = parseInt(a?.SerialJobno?.split('/')[1], 10);\r\n            const numB = parseInt(b?.SerialJobno?.split('/')[1], 10);\r\n            // Compare the numeric values\r\n            return numA - numB;\r\n          });\r\n\r\n        const obj = {\r\n            rd:rd,\r\n            rd1:rd1\r\n        }\r\n\r\n        return obj;\r\n        // return datas;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};","export const GetUniquejob = (str_srjobno) => {\r\n  let job = str_srjobno;\r\n  const parts = job?.split(\",\");\r\n  // const revParts = parts?.reverse();\r\n  const jobs = [...new Set(parts)];\r\n  const resultString = jobs?.map((part) => `'${part}'`)?.join(\",\");\r\n  return resultString;\r\n};\r\n","import img from \"../assets/img/default.jpg\";\r\n\r\nexport const handleImageError = (e) => {\r\n    e.target.src = img\r\n}","\r\nexport const handlePrint = (e) => {\r\n    e.preventDefault();\r\n    window.print();\r\n};","\r\nexport const formatDate = (inputDate) => {\r\n    let inpDate = inputDate?.trim();\r\n    if(inpDate === '01 Jan 1900'){\r\n        return '';\r\n    }else{\r\n        let lastfourDigit = inpDate?.slice(7, 11);\r\n        let last2Digit = lastfourDigit?.slice(2, 4);\r\n        if(last2Digit === '00'){\r\n            const date = new Date(inpDate);\r\n            const day = String(date?.getDate())?.padStart(2, '0'); // Ensure two digits for the day\r\n            const monthAbbreviation = date?.toLocaleString('default', { month: 'short' });\r\n            const year = String(date?.getFullYear()); // Get the last two digits of the year   \r\n            return `${day}${monthAbbreviation}${year}`;\r\n        }else{\r\n            const date = new Date(inpDate);\r\n            const day = String(date?.getDate())?.padStart(2, '0'); // Ensure two digits for the day\r\n            const monthAbbreviation = date?.toLocaleString('default', { month: 'short' });\r\n            const year = String(date?.getFullYear())?.slice(-2); // Get the last two digits of the year   \r\n            return `${day}${monthAbbreviation}${year}`;\r\n        }\r\n    }\r\n}","import { formatDate } from \"./DateFormat\";\r\n\r\nexport const organizeData = (rd, rd1) => {\r\n    let newArr = [];\r\n    rd?.forEach((e, i) => {\r\n      let obj = {};\r\n      obj.rd = { ...e };\r\n      obj.rd.orderDatef = formatDate(obj?.rd?.OrderDate);\r\n      obj.rd.promiseDatef = formatDate(obj?.rd?.promisedate);\r\n      let arrs = rd1?.filter((ele) => ele?.SerialJobno === e?.serialjobno);\r\n      obj.rd1 = arrs;\r\n      newArr?.push(obj);\r\n    });\r\n    return newArr;\r\n  };\r\n\r\n\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport JsBarcode from 'jsbarcode';\r\n\r\nconst BarcodeStickerGen = ({ data }) => {\r\n  const barcodeRef = useRef(null);\r\n  const [imageSrc, setImageSrc] = useState('');\r\n  useEffect(() => {\r\n    if (barcodeRef.current) {\r\n      JsBarcode(barcodeRef.current, data);\r\n    }\r\n  }, [data]);\r\n\r\n  const canvasRef = useRef(null);\r\n  useEffect(() => {\r\n    const generateBarcode = () => {\r\n      const canvas = canvasRef.current;\r\n\r\n      if (canvas) {\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        // Clear the canvas\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Generate barcode\r\n        JsBarcode(canvas, data, {\r\n          format: 'CODE128',\r\n          displayValue: true,\r\n        });\r\n\r\n        // Get the data URL of the canvas\r\n        const dataUrl = canvas.toDataURL('image/png');\r\n\r\n        // Set the image source state\r\n        setImageSrc(dataUrl);\r\n      }\r\n    };\r\n\r\n    generateBarcode();\r\n  }, []);\r\n\r\n  return <>\r\n   <canvas ref={canvasRef} className='d_none_update'></canvas>\r\n  {imageSrc && <img src={imageSrc} alt=\"Barcode\" className='barcode_sticker_new' loading=\"lazy\"  />}\r\n  </>;\r\n};\r\n\r\nexport default BarcodeStickerGen;","import React, { useEffect, useState } from 'react';\r\nimport \"../../assets/css/bagprint/jobbagsticker3.css\"\r\nimport queryString from 'query-string';\r\nimport Loader from '../../components/Loader';\r\nimport BarcodeStickerGen from './BarcodeStickerGen';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { GetUniquejob } from '../../GlobalFunctions/GetUniqueJob';\r\nimport { handleImageError } from '../../GlobalFunctions/HandleImageError';\r\nimport { handlePrint } from '../../GlobalFunctions/HandlePrint';\r\nimport { checkInstruction } from '../../GlobalFunctions';\r\nimport { FetchDatas } from '../../GlobalFunctions/FetchDatas';\r\n\r\nfunction Jobbagsticker3({ queries, headers }) {\r\n    const location = useLocation();\r\n    const queryParams = queryString.parse(location.search);\r\n    const resultString = GetUniquejob(queryParams?.str_srjobno);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          try {\r\n            const abc = await FetchDatas(queryParams, resultString, queries, headers);\r\n            abc?.length > 0 ? setData(abc) : setData([])\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        };\r\n      \r\n        fetchData();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(queryParams)?.length !== 0) {\r\n            atob(queryParams?.imagepath);\r\n        }\r\n    }, [queryParams]);\r\n    \r\n    useEffect(() => {\r\n        if (data?.length !== 0) {\r\n            setTimeout(() => {\r\n                window.print();\r\n            }, 4000);\r\n        }\r\n}, [data]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data.length === 0 ? <Loader /> : <><div className=\"print_btn\"><button className=\"btn_white blue print_btn\" onClick={(e) => handlePrint(e)}>\r\n                    Print\r\n                </button></div>\r\n                <div className='pad_60_allPrint'>\r\n\r\n                \r\n                    {Array.from({ length: queries?.pageStart }, (_, index) => (\r\n                        index > 0 && <div key={index} className=\"container  ml_5 mb_10\"></div>\r\n                    ))}\r\n                    {\r\n                        data?.length > 0 ? \r\n                            <div className='container_job_bag_sticker_3'>\r\n                                {\r\n                                    data?.map((e, i) => {\r\n                                        return (\r\n                                            <div className='bag_space' key={i}>\r\n                                                <div className=\"heading_job_3\">\r\n                                                    <div className='img_aside_3'>\r\n                                                        <div className='img_job3'><img src={e?.additional?.img !== \"\" ? e?.additional?.img : require(\"../../assets/img/default.jpg\")} alt=\"\" onError={e => handleImageError(e)} loading=\"eager\" id='jobsticker3' /></div>\r\n                                                        <div className='ins_3' >\r\n                                                            <h1 className='h1_3' style={{ lineHeight: \"28px\" }}>{(\" \" + (e?.data?.rd?.ProductInstruction?.length > 0 ? checkInstruction(e?.data?.rd?.ProductInstruction) : checkInstruction(e?.data?.rd?.QuoteRemark)))?.slice(0, 62) }</h1>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='databarcode_3' style={{position:\"relative\"}}>\r\n                                                        <div className='data_center_3'>\r\n                                                            <h1 className='h1_3'> {e?.data?.rd?.serialjobno}</h1>\r\n                                                            <h1 className='h1_3'> {e?.data?.rd?.Designcode}</h1>\r\n                                                            <h1 className='h1_3'> {e?.data?.rd?.MetalType}</h1>\r\n                                                            <h1 className='h1_3'> {e?.data?.rd?.MetalColorCo}</h1>\r\n                                                            <h1 className='h1_3'> {e?.data?.rd?.category}</h1>\r\n                                                            <h1 className='h1_3'> {e?.data?.rd?.CustomerCode}</h1>\r\n                                                        </div>\r\n                                                        <div style={{ position: \"absolute\", right: \"-13px\" }}>\r\n                                                            {(e?.data?.rd?.length !== 0 && e?.data?.rd !== undefined) && <>{e?.data?.rd?.serialjobno !== undefined && <BarcodeStickerGen data={e?.data?.rd?.serialjobno} />}</>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                         : 'Data Not Found!'\r\n                    }\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Jobbagsticker3;"],"names":["FetchDatas","async","queryParams","resultString","queries","headers","responseData","objs","jobno","custid","printname","appuserid","url","allDatas","GetData","datas","organizeData","rd","rd1","map","a","_a$rd","_a$rd2","length","clr","clrPcs","clrWt","dia","diaPcs","diaWt","misc","miscWt","DiamondList","ColorStoneList","e","i","ConcatedFullShapeQualityColorCode","MasterManagement_DiamondStoneTypeid","ActualPcs","ActualWeight","push","imagePath","imagepath","atob","img","ThumbImagePath","data","additional","error","console","log","_response$data","_datas$rd","_datas$rd2","p_tag","concat","job","jsonString","JSON","stringify","base64String","btoa","Body","urls","response","axios","post","parse","d","sort","b","_a$serialjobno","_b$serialjobno","parseInt","serialjobno","split","_a$SerialJobno","_b$SerialJobno","SerialJobno","GetUniquejob","str_srjobno","_jobs$map","parts","jobs","Set","part","join","handleImageError","target","src","handlePrint","preventDefault","window","print","formatDate","inputDate","inpDate","trim","lastfourDigit","slice","_String","date","Date","day","String","getDate","padStart","monthAbbreviation","toLocaleString","month","year","getFullYear","_String2","_String3","newArr","forEach","_obj$rd","_obj$rd2","obj","orderDatef","OrderDate","promiseDatef","promisedate","arrs","filter","ele","_ref","barcodeRef","useRef","imageSrc","setImageSrc","useState","useEffect","current","JsBarcode","canvasRef","generateBarcode","canvas","getContext","clearRect","width","height","format","displayValue","dataUrl","toDataURL","_jsxs","_Fragment","children","_jsx","ref","className","alt","loading","location","useLocation","queryString","search","setData","abc","fetchData","_Object$keys","Object","keys","setTimeout","Loader","onClick","Array","from","pageStart","_","index","_e$additional","_e$additional2","_ref2","_e$data","_e$data$rd","_e$data$rd$ProductIns","_e$data2","_e$data2$rd","_e$data3","_e$data3$rd","_e$data4","_e$data4$rd","_e$data5","_e$data5$rd","_e$data6","_e$data6$rd","_e$data7","_e$data7$rd","_e$data8","_e$data8$rd","_e$data9","_e$data9$rd","_e$data10","_e$data10$rd","_e$data11","_e$data12","_e$data12$rd","_e$data13","_e$data13$rd","require","onError","id","style","lineHeight","ProductInstruction","checkInstruction","QuoteRemark","position","Designcode","MetalType","MetalColorCo","category","CustomerCode","right","undefined","BarcodeStickerGen"],"sourceRoot":""}