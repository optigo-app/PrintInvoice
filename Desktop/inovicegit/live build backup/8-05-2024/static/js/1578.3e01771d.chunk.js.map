{"version":3,"file":"static/js/1578.3e01771d.chunk.js","mappings":"+MAMA,MAyEA,EAzEyBA,IAAyD,IAAxD,KAAEC,EAAI,MAAEC,EAAK,UAAEC,EAAS,UAAEC,EAAS,IAAEC,EAAG,OAAEC,GAAQN,EAC1E,MAAOO,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BC,EAAKC,IAAUF,EAAAA,EAAAA,UAAS,KACxBG,EAAgBC,IAAqBJ,EAAAA,EAAAA,WAAS,GAe/CK,EAAoBC,UACxB,MAAMC,EAAM,IAAIC,WAGVC,QAAQC,IACZC,EAAWC,KAAIN,MAAOO,EAAUC,KAC9B,IACE,MAAMC,QAAiBC,MAAc,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUI,KACvC,IAAKF,EAASG,GACZ,MAAM,IAAIC,MAAM,0BAADC,OAAmC,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUI,MAEtD,MAAMI,QAAkBN,EAASO,OACjCf,EAAIgB,KAAK,SAADH,OAAkB,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUW,MAAK,QAAQH,EAC3C,CAAE,MAAOI,GACPC,QAAQD,MAAMA,EAChB,MAIJ,MAAME,QAAgBpB,EAAIqB,cAAc,CAAEC,KAAM,SAG1CP,EAAO,IAAIQ,KAAK,CAACH,KACvBI,EAAAA,EAAAA,QAAOT,EAAM,aAAa,EA0B5B,OAvBAU,EAAAA,EAAAA,YAAU,KACS1B,WACf,IACE,MAAM2B,QAAaC,EAAAA,EAAAA,IAAQzC,EAAOC,EAAWC,EAAWH,EAAMI,EAAKC,GACnE,GAAqB,SAAb,OAAJoC,QAAI,IAAJA,OAAI,EAAJA,EAAME,QAAkB,EACZC,EAAAA,EAAAA,IAAkB,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,OAKhCtC,GAAU,GACVG,EAAO,oBAhDC+B,KAEhB,IAAItB,EAAa,GACb,OAAJsB,QAAI,IAAJA,GAAAA,EAAMK,gBAAgBC,SAAQ,CAACC,EAAGC,KACT,MAAlB,OAADD,QAAC,IAADA,OAAC,EAADA,EAAGE,cACL/B,EAAWgC,KAAK,CAAC1B,IAAM,OAADuB,QAAC,IAADA,OAAC,EAADA,EAAGE,YAAalB,MAAQ,OAADgB,QAAC,IAADA,OAAC,EAADA,EAAGI,SAClD,IAEFjC,EAAWkC,OAAS,EAAIxC,EAAkBM,GAAcT,EAAO,4BAA4B,EAoCnF4C,CAAa,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMI,MACftC,GAAU,GAKd,MACEA,GAAU,GACVG,EAAW,OAAJ+B,QAAI,IAAJA,OAAI,EAAJA,EAAMc,QAEjB,CAAE,MAAOtB,GACPC,QAAQD,MAAMA,EAChB,GAEFuB,EAAU,GACT,KAEDC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAGrD,GAASmD,EAAAA,EAAAA,KAACG,EAAAA,EAAM,IAAc,KAARnD,EACvB,IAAKgD,EAAAA,EAAAA,KAAA,KAAGI,UAAU,yDAAwDF,SAAElD,KAAY,C","sources":["pages/prints/ImageExportExcel.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { apiCall, isObjectEmpty } from '../../GlobalFunctions';\r\nimport { saveAs } from 'file-saver';\r\nimport JSZip from 'jszip';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst ImageExportExcel = ({ urls, token, invoiceNo, printName, evn, ApiVer }) => {\r\n  const [loader, setLoader] = useState(true);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [isImageWorking, setIsImageWorking] = useState(true);\r\n  const handleImageErrors = () => {\r\n    setIsImageWorking(false);\r\n  };\r\n  const loadData = (data) => {\r\n    // console.log(data);\r\n    let imagePaths = [];\r\n    data?.BillPrint_Json1.forEach((e, i) => {\r\n      if (e?.DesignImage !== \"\") {\r\n        imagePaths.push({src: e?.DesignImage, jobNo: e?.SrJobno});\r\n      }\r\n    });\r\n    imagePaths.length > 0 ? downloadImagesZip(imagePaths) : setMsg(\"There is no Design Images\")\r\n  }\r\n\r\n  const downloadImagesZip = async (imagePaths) => {\r\n    const zip = new JSZip();\r\n\r\n    // Fetch and add each image to the zip file\r\n    await Promise.all(\r\n      imagePaths.map(async (imageUrl, index) => {\r\n        try {\r\n          const response = await fetch(imageUrl?.src);\r\n          if (!response.ok) {\r\n            throw new Error(`Failed to fetch image: ${imageUrl?.src}`);\r\n          }\r\n          const imageBlob = await response.blob();\r\n          zip.file(`image_${imageUrl?.jobNo}.jpg`, imageBlob);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      })\r\n    );\r\n    // Generate the zip file\r\n    const content = await zip.generateAsync({ type: 'blob' });\r\n\r\n    // Create a Blob object and trigger download\r\n    const blob = new Blob([content]);\r\n    saveAs(blob, 'images.zip');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sendData = async () => {\r\n      try {\r\n        const data = await apiCall(token, invoiceNo, printName, urls, evn, ApiVer);\r\n        if (data?.Status === '200') {\r\n          let isEmpty = isObjectEmpty(data?.Data);\r\n          if (!isEmpty) {\r\n            loadData(data?.Data);\r\n            setLoader(false);\r\n          } else {\r\n            setLoader(false);\r\n            setMsg(\"Data Not Found\");\r\n          }\r\n        } else {\r\n          setLoader(false);\r\n          setMsg(data?.Message);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    sendData();\r\n  }, []);\r\n  return (\r\n    <>{loader ? <Loader /> : msg === \"\" ?\r\n      \"\" : <p className='text-danger fs-2 fw-bold mt-5 text-center w-50 mx-auto'>{msg}</p>}</>\r\n  )\r\n}\r\n\r\nexport default ImageExportExcel"],"names":["_ref","urls","token","invoiceNo","printName","evn","ApiVer","loader","setLoader","useState","msg","setMsg","isImageWorking","setIsImageWorking","downloadImagesZip","async","zip","JSZip","Promise","all","imagePaths","map","imageUrl","index","response","fetch","src","ok","Error","concat","imageBlob","blob","file","jobNo","error","console","content","generateAsync","type","Blob","saveAs","useEffect","data","apiCall","Status","isObjectEmpty","Data","BillPrint_Json1","forEach","e","i","DesignImage","push","SrJobno","length","loadData","Message","sendData","_jsx","_Fragment","children","Loader","className"],"sourceRoot":""}